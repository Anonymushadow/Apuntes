---------------------------------------------------------------------------------------------
00_PALABRAS ERSERVADAS
---------------------------------------------------------------------------------------------
: --> indicar el tipo de dato 
number --> tipo numero
string --> tipo string
boolean --> tipo booleano
undefined --> tipo indefinido
null --> tipo nulo
any --> cualquier tipo de dato
void --> indica que la funcion puede no retornar nada
never --> indica un tipo de datos que no debe ocurrir
type --> definir un tipo de alias
? --> es una propiedad opcional
?? --> es opcional y en caso de no estar asigna algo por defecto
readonly --> solo puede leerse pero no modificarse
| --> puede ser una cosa u otra
& --> une dos datos para tener uno solo con ambas caractersticas
typeof --> obtiene el tipo o tipos de un dato
ReturnTypes --> obtiene el tipo o tipos del retorno de una funcion
Array<> --> definir un array
[] --> definir un array

---------------------------------------------------------------------------------------------
0_INICIO
---------------------------------------------------------------------------------------------
¿Que es typescript?: es un superset de javascript
¿Que significa lo de superset?: significa que cualquier código JavaScript es válido en TypeScript, pero TypeScript agrega características adicionales 
Caracteristicas adicionales a js:
    Tipado Estático: TypeScript introduce un sistema de tipos estático que permite declarar el tipo de las variables, parámetros de funciones, y valores de retorno. Esto ayuda a detectar errores en tiempo de compilación en lugar de tiempo de ejecución.
    Orientado a Objetos: TypeScript admite programación orientada a objetos con clases, interfaces, herencia y otros conceptos orientados a objetos que no están presentes en la versión anterior de ECMAScript (ES5).
    Módulos: TypeScript proporciona soporte integrado para módulos y permite organizar el código en piezas más pequeñas y reutilizables.
    Compilación: El código TypeScript se compila a JavaScript, lo que significa que, finalmente, se ejecuta en el entorno de JavaScript. TypeScript agrega capas adicionales de abstracción durante el desarrollo, pero este código se "compila" a JavaScript para su ejecución.
    Decoradores: TypeScript tiene soporte para decoradores que permiten adjuntar metadata a clases y sus miembros. Esta característica es especialmente útil en frameworks como Angular.
Extra: 
    todo lo hecho con typescript se transcribe a javascript al momento de ejecutarlo
    hay mucha gente que usa typescript por lo que hay mas oferta de empleo respecto a typescript

---------------------------------------------------------------------------------------------
1_TIPOS DE DATOS
---------------------------------------------------------------------------------------------
Reasignacion: TS no permite que una variable cambie su tipo de contenido (number a string, string a bool, etc)
inferencia: typescript cuenta con inferencia de datos, osea que detecta el tipo de dato automaticamente al asignarselo a la variable
string: cadenas de texto
number: numero
boolean: booleanos
any: ignorar el tipado de typescript, manejarlo como js
undefind: datos no definidos
null: datos nulos
void: puede no devolver nada como puede devolve lo que quiera
never: es un tipo de dato que no debe ocurrir, es una funcion que lanza un error
Advertencia: evitar siempre que sea posible definir los tipos, ya que de este modo es mas facil de mantener y gasta menos recursos al transcribir el codigo a js
Definir tipo: cuando definimos variables sin asignarle valores de una debemos asignarle el tipo para que no se ponga any por defecto
Funciones: en las funciones debemos asignar los tipos para los parametros debido a que no puede inferir

--------------------------------------------------------------------------------------------
2_TYPE ALIAS
---------------------------------------------------------------------------------------------
¿Que es?: es un tipo de dato personalizado
?: al poner el simbolo de pregunta indicamos que puede ser undefined, puede estar como puede no estar
si una funcion o algo tiene el signo de pregunta signiifica que si es undefined no lo ejecuta
    heroe.isAlive?.toUpperCase();
    si hero.isAlive no es undefined entonces lo transforma a mayusuclas, si no no
readonly: a veces necesitamos que ciertos datos no sean modificados, como los id, para esto usamos el readonly, se puede ejecutar pero lanza un error para que el programador se de cuenta que algo esta mal
Template Union Types: se trata de mezclar templlate literals con types, mezclando 
Union types: son los mismos simbolos de "O", que se utilizan para decir que un dato puede ser de un tipo u otro
Intersection types: se trata de unir 2 types para formar uno grande
    es como cuando en js tenes el objeto productos y el objeto productos2, y haces 
        productos3 = {
            ...productos,
            ...productos2
        }
typeof: toma todo un elemento y obtiene su tipo para ser reutilizado
ReturnType: obtiene el tipo de datos de lo que retorna la funcion

--------------------------------------------------------------------------------------------
3_ARRAYS
---------------------------------------------------------------------------------------------
definir el tipo de array: hay 2 modos de hacer esto
    Array<tipo>
    tipo[]
    ejemplo:
        Array<string>
        string[]
    cualquiera de los dos funciona, es preferencia
Mixtos: para hacer un array mezclado debemos poner el tipo entre parentesis
    (string | number)[] --> esto significa que es un array que puede tener numeros, textos o ambos
tupla: es un array de posiciones fijas, no se pueden tener mas ni menos cantidades



