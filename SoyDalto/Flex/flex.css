/*
flexbox--------------
order---------------


/*
flexbox = cajas flexibles

display flex = se comporta como display block
se mantienen uno al lado de otro

flex-container = contiene los items
flex-item = elementos dentro de un contenedor con display flex
cross axis = eje y (arriba hacia abajo)
main axis = eje x (derecha hacia izquierda)
main-start = main axis del lado izquierdo del cross axis
main end = main axis del lado derecho del cross axis
cross-start = cross del lado de arriba del main
cross-end = cross del lado de abajo del main

los flex items se ajustas al contenedor

propiedades que se ponen en el contenedor:
flex direction = cambiar la direccion del main axis 
row = horizontal hacia la derecha
row-reverse = de derecha a izquierda
column = en forma de columna

flex-wrap = mantiene el ancho de las cajas
wrap = tira las cajas que no entran hacia abajo
wrap-reverse = tira las cajas que no entran hacia arriba


flex-flow = flex direction + flex wrap

justify-content = es para centrar el contenido
center = centra el contenido
space-arround = le da el mayor espacio posible a cada caja pero iguales
space-between = le da un margen automatico a cada caja 
space-evelyn = les da un margen especifico para que toda tengan el mismo de ambos lados


align-items = alinea en el cross (cuando hay solo una linea)
stretch = por defecto (se estira a todo lo largo del cross)
flex-satrt = lo pone al principio
center = centra verticalmente
flex-end = lo pone al final


align-content = alinea los items con mas de una linea abajo de todo y utilizas el wrap-reverse
baseline = se mantienen abajo 



justify = x
align = y
*/


.flex-container {
	display: flex;
	flex-direction: column;
}

.flex-item {
	background-color: #037;
	color: #fff;
	padding: 5px;
	margin: 5px; 
}




.flex-container2 {
	display: flex;
	flex-direction: row-reverse;
	flex-wrap: wrap-reverse;

}

.flex-item2 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item2:first-child {
	background-color: blue;
}

.flex-item2:last-child {
	background-color: red;
}






/* 
1 
*/



.flex-container3 {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;

}

.flex-item3 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item3:first-child {
	background-color: blue;
}

.flex-item3:last-child {
	background-color: red;
}












.flex-container4 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-around;

}

.flex-item4 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item4:first-child {
	background-color: blue;
}

.flex-item4:last-child {
	background-color: red;
}






.flex-container5 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;

}

.flex-item5 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item5:first-child {
	background-color: blue;
}

.flex-item5:last-child {
	background-color: red;
}




.flex-container6 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-evelyn;

}

.flex-item6 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item6:first-child {
	background-color: blue;
}

.flex-item6:last-child {
	background-color: red;
}



/*
por defecto
*/

.flex-container7 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: stretch;
	background-color: #195;
	height: 400px;
}

.flex-item7 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	width: 110px;
	min-width: 120px;
}

.flex-item7:first-child {
	background-color: blue;
}

.flex-item7:last-child {
	background-color: red;
}






.flex-container8 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: flex-start;
	background-color: #995;
	height: 200px;
}

.flex-item8 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item8:first-child {
	background-color: blue;
}

.flex-item8:last-child {
	background-color: red;
}







.flex-container9 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: center;
	background-color: #155;
	height: 200px;
}

.flex-item9 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item9:first-child {
	background-color: blue;
}

.flex-item9:last-child {
	background-color: red;
}





.flex-container10 {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: flex-end;
	background-color: #204;
	height: 200px;
}

.flex-item10 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item10:first-child {
	background-color: blue;
}

.flex-item10:last-child {
	background-color: red;
}




.flex-container11 {
	display: flex;
	flex-wrap: wrap-reverse;
	align-content: baseline;
	background-color: #949;
	height: 300px;
}

.flex-item11 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
}

.flex-item11:first-child {
	background-color: blue;
}

.flex-item11:last-child {
	background-color: red;
}



/*
modificar items


stretch = por defecto (se estira a todo lo largo del cross)
flex-satrt = lo pone al principio
center = centra verticalmente
flex-end = lo pone al final


flex-grow = divide el espacio sobrante entre las cajas




el margin dentro en una caja flexible se comoporta distinto

centrar:
margin-top : auto;
margin-buttom: auto;
margin-left: auto;
margin-right: auto;

o directament
margin: auto;
*/

.margin-flex {
	display: flex;
	flex-wrap: wrap-reverse;
	background-color: #119;
	height: 300px;
}

.caja {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 120px;
	margin: auto;
	text-align: center;
}








.container-flex {
	display: flex;
	flex-wrap: wrap;
	background-color: #494;
	height: 300px;
}

.item01 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	width: 110px;
	min-width: 250px;
	flex-grow: 1;
}

.item01:first-child {
	background-color: blue;
}

.item01:last-child {
	background-color: red;
}
 /* 
 si el flex-grow esta en un solo item este se queda con todo el espacio sobrante
 si se lo pones a dos se divide entre ellos
 si se pone 2 se divide entre los que hay mas uno mas y ese extra se le da al que tiene 2
 

 el espacio se empieza a dividir cuando cada caja llega a su tama√±o asignado


 ejemplo caja uno tiene 2 y los otros dos tiene 1 se divide en 4 y se reparte dos para 
 la caja uno, uno para la dos y uno para la tres
 */


/*
flex-basis = width del flex-box
flex-shrink = cuanto espacio sede esa caja a las otras
cuando se achica la pantalla y se encogen


flex = flex-grow + flex-shrink + flex basis
*/
.container-flex2 {
	display: flex;
	background-color: #287;
	height: 300px;
}

.item02 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	flex-basis: 300px;
	flex-grow: 1;
}

.item02:first-child {
	background-color: #004;
}

.item02:last-child {
	background-color: #500;
	flex-shrink: 9;
}




/*
order = es como un z-index pero en el eje del main
el que tiene el valor al alto essta al final del main axis

*/


.order {
	display: flex;
	background-color: #038;
	height: 300px;
}

.order01 {
	background-color: #000;
	color: #fff;
	margin: 5px;
	height: 110px;
	flex-basis: 300px;
	flex-grow: 1;
	
}

.order01:first-child {
	background-color: #004;
	order: 2;
}

.order01:last-child {
	background-color: #500;
	flex-shrink: 9;
}
